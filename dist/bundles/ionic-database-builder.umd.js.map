{
  "version": 3,
  "file": "ionic-database-builder.umd.js",
  "sources": [
    "ng://ionic-database-builder/out/src/defaults/mappers-table-simple.ts",
    "ng://ionic-database-builder/out/src/defaults/database-settings-factory-default.ts",
    "ng://ionic-database-builder/out/src/utils/mappers-table-base.ts",
    "ng://ionic-database-builder/out/src/database.module.ts",
    "ng://ionic-database-builder/out/src/utils/database-settings-factory-contract.ts",
    "ng://ionic-database-builder/out/src/providers/database.ts",
    "ng://ionic-database-builder/out/src/utils/buildable-database-manager.ts",
    "ng://ionic-database-builder/out/src/utils/database-manager.ts",
    "ng://ionic-database-builder/out/src/providers/database-migration.ts",
    "ng://ionic-database-builder/out/src/utils/database-migration-base.ts",
    "ng://ionic-database-builder/out/src/providers/database-migration-contract.ts",
    "ng://ionic-database-builder/out/src/providers/database-helper-service.ts",
    "ng://ionic-database-builder/node_modules/tslib/tslib.es6.js"
  ],
  "sourcesContent": [
    "import { DatabaseHelper, MetadataTable } from \"database-builder\";\r\nimport { MappersTableBase } from \"..\";\r\nimport { MapperSettingsModel } from \"../model/mapper-settings-model\";\r\n\r\nexport class MappersTableSimple extends MappersTableBase {\r\n\r\n    private _mappers: Map<string, MetadataTable<any>> = new Map<string, MetadataTable<any>>();\r\n\r\n    constructor(\r\n        private _databaseHelper: DatabaseHelper,\r\n        protected _defaultSettings: MapperSettingsModel\r\n    ) {\r\n        super();\r\n    }\r\n\r\n    public mapper(\r\n        readOnly?: boolean,\r\n        keyColumn?: string,\r\n        settings: MapperSettingsModel = this._defaultSettings,\r\n        ...defaultsMapper: Array<new () => any>\r\n    ): MappersTableSimple {\r\n        defaultsMapper.forEach(mapper => {\r\n            this.add(mapper, readOnly, keyColumn);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    public add<T>(\r\n        newable: new () => T,\r\n        readOnly?: boolean,\r\n        keyColumn?: string,\r\n        settings: MapperSettingsModel = this._defaultSettings,\r\n        advancedMapper: (metadata: MetadataTable<T>) => void = void 0\r\n    ): MappersTableSimple {\r\n        const metadata = new MetadataTable(newable, this._databaseHelper, readOnly, keyColumn)\r\n            .autoMapper(\r\n                settings.references,\r\n                settings.referencesId,\r\n                settings.referencesIdRecursive,\r\n                settings.referencesIdColumn\r\n            );\r\n        if (advancedMapper) {\r\n            advancedMapper(metadata);\r\n        }\r\n        this.push(metadata);\r\n        return this;\r\n    }\r\n\r\n    public getMapper<T>(tKey: new () => T): MetadataTable<T> {\r\n        return this._mappers.get(tKey.name);\r\n    }\r\n\r\n    public forEachMapper(\r\n        callbackfn: (value: MetadataTable<any>, key: string, map: Map<string, MetadataTable<any>>) => void,\r\n        thisArg?: any\r\n    ): void {\r\n        this._mappers.forEach(callbackfn);\r\n    }\r\n\r\n    private push(metadataTable: MetadataTable<any>): void {\r\n        this._mappers.set(metadataTable.instance.constructor.name, metadataTable);\r\n    }\r\n}\r\n",
    "import { Injector } from \"@angular/core\";\r\nimport { DatabaseSettingsFactoryContract, MappersTableBase } from \"..\";\r\nimport { DatabaseSettingsModel } from \"../model/database-settings-model\";\r\n\r\nexport class DatabaseSettingsFactoryDefault extends DatabaseSettingsFactoryContract {\r\n\r\n    private _model: DatabaseSettingsModel;\r\n\r\n    constructor(\r\n        versionOrModel: number | DatabaseSettingsModel,\r\n        databaseName: string,\r\n        mapper: MappersTableBase\r\n    ) {\r\n        super();\r\n        if (Number.isInteger(versionOrModel as number)) {\r\n            this._model = {\r\n                version: versionOrModel as number,\r\n                databaseName: databaseName,\r\n                mapper: mapper\r\n            };\r\n        } else {\r\n            this._model = versionOrModel as DatabaseSettingsModel;\r\n        }\r\n    }\r\n\r\n    public databaseName(injector: Injector): string {\r\n        return this._model.databaseName;\r\n    }\r\n\r\n    public version(injector: Injector): number {\r\n        return this._model.version;\r\n    }\r\n\r\n    public mapper(): MappersTableBase {\r\n        return this._model.mapper;\r\n    }\r\n}\r\n",
    "import { GetMapper, MetadataTable } from \"database-builder\";\r\n\r\nexport abstract class MappersTableBase implements GetMapper {\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    public abstract getMapper<T>(tKey: new () => T): MetadataTable<T>;\r\n    public abstract forEachMapper(callbackfn: (value: MetadataTable<any>, key: string, map: Map<string, MetadataTable<any>>) => void, thisArg?: any): void;\r\n}\r\n",
    "import { Observable } from \"rxjs\";\r\nimport { ModuleWithProviders, NgModule, Provider, Type } from \"@angular/core\";\r\nimport { DatabaseHelperService } from \"./providers/database-helper-service\";\r\nimport { DatabaseMigrationContract } from \"./providers/database-migration-contract\";\r\nimport { DatabaseMigration } from \"./providers/database-migration\";\r\nimport { Database } from \"./providers/database\";\r\nimport { DatabaseSettingsFactoryContract } from \"./utils/database-settings-factory-contract\";\r\n\r\n@NgModule({\r\n    providers: [\r\n        DatabaseMigration,\r\n        Database,\r\n        DatabaseHelperService\r\n    ]\r\n})\r\n// https://stackblitz.com/edit/ionic-j3f3ym\r\nexport class DatabaseModule {\r\n\r\n    public static forRoot(\r\n        settings: Type<DatabaseSettingsFactoryContract>,\r\n        databaseMigrationContract?: Type<DatabaseMigrationContract>\r\n    ): ModuleWithProviders {\r\n        const providers: Provider[] = [\r\n            {\r\n                provide: DatabaseSettingsFactoryContract,\r\n                useClass: settings\r\n            }\r\n        ];\r\n        return this.forBase(providers);\r\n    }\r\n\r\n    public static forRootValue(\r\n        settings: DatabaseSettingsFactoryContract,\r\n        databaseMigrationContract?: Type<DatabaseMigrationContract>\r\n    ): ModuleWithProviders {\r\n        const providers: Provider[] = [\r\n            {\r\n                provide: DatabaseSettingsFactoryContract,\r\n                useValue: settings\r\n            }\r\n        ];\r\n        return this.forBase(providers);\r\n    }\r\n\r\n    private static forBase(\r\n        providers: Provider[],\r\n        databaseMigrationContract?: Type<DatabaseMigrationContract>\r\n    ): ModuleWithProviders {\r\n        if (databaseMigrationContract) {\r\n            providers.push({\r\n                provide: DatabaseMigrationContract,\r\n                useClass: databaseMigrationContract\r\n            });\r\n        }\r\n        return {\r\n            ngModule: DatabaseModule,\r\n            providers: providers\r\n        };\r\n    }\r\n}\r\n",
    "import { Injector } from \"@angular/core\";\r\nimport { MappersTableBase } from \"..\";\r\n\r\nexport abstract class DatabaseSettingsFactoryContract {\r\n\r\n    public abstract databaseName(injector: Injector): string;\r\n    public abstract version(injector: Injector): number;\r\n    public abstract mapper(injector: Injector): MappersTableBase;\r\n\r\n}\r\n",
    "import { DatabaseMigration } from \"./database-migration\";\r\nimport { Injectable, Injector } from \"@angular/core\";\r\nimport { SQLite, SQLiteObject } from \"@ionic-native/sqlite\";\r\nimport { Platform } from \"ionic-angular\";\r\nimport { BuildableDatabaseManager } from \"../utils/buildable-database-manager\";\r\nimport { DatabaseSettingsFactoryContract } from \"..\";\r\n\r\n@Injectable()\r\nexport class Database extends BuildableDatabaseManager {\r\n    constructor(\r\n        private _injector: Injector,\r\n        private _settings: DatabaseSettingsFactoryContract,\r\n        platform: Platform,\r\n        sqlite: SQLite,\r\n        private _databaseMigration: DatabaseMigration\r\n    ) {\r\n        super(platform, sqlite,\r\n            _settings.mapper(_injector)\r\n        );\r\n    }\r\n\r\n    protected migrationVersion(database: SQLiteObject, version: number): Promise<boolean> {\r\n        return this._databaseMigration.version(database, version);\r\n    }\r\n\r\n    protected databaseName(): string {\r\n        return this._settings.databaseName(this._injector);\r\n    }\r\n\r\n    public version(): number {\r\n        return this._settings.version(this._injector);\r\n    }\r\n}\r\n",
    "import { DatabaseManager } from \"./database-manager\";\r\nimport { Platform } from \"ionic-angular\";\r\nimport { SQLite, SQLiteObject, SQLiteTransaction } from \"@ionic-native/sqlite\";\r\nimport { Crud, Ddl, ExecutableBuilder, Query, QueryCompiled, ResultExecuteSql } from \"database-builder\";\r\nimport { MappersTableBase } from \"../utils/mappers-table-base\";\r\n\r\nexport abstract class BuildableDatabaseManager extends DatabaseManager {\r\n\r\n    constructor(\r\n        platform: Platform, sqlite: SQLite,\r\n        private _mapper: MappersTableBase,\r\n        public enableLog: boolean = true\r\n    ) {\r\n        super(platform, sqlite);\r\n    }\r\n\r\n    public get mapper(): MappersTableBase {\r\n        return this._mapper;\r\n    }\r\n\r\n    public databaseInstance(): Promise<SQLiteObject> {\r\n        const database = super.databaseInstance(this.databaseName(), this.version());\r\n        if (!database) {\r\n            throw new Error(\"SQLite not avaliable!\");\r\n        }\r\n        return database;\r\n    }\r\n\r\n    public newTransaction(successTransaction: () => void): Promise<SQLiteTransaction> {\r\n        return new Promise((resolve, reject) => {\r\n            this.databaseInstance().then(database => {\r\n                database.transaction((result: SQLiteTransaction) => {\r\n                    resolve(result);\r\n                })\r\n                    .then(x => {\r\n                        successTransaction();\r\n                    })\r\n                    .catch(error => {\r\n                        reject(error);\r\n                    });\r\n            }, reject)\r\n                .catch(error => {\r\n                    reject(error);\r\n                });\r\n        });\r\n    }\r\n\r\n    public transaction(successTransaction: () => void): Promise<Crud> {\r\n        return new Promise((resolve, reject) => {\r\n            this.newTransaction(successTransaction)\r\n                .then((transaction) => {\r\n                    resolve(new Crud(transaction, this._mapper, this.enableLog));\r\n                })\r\n                .catch(error => {\r\n                    reject(error);\r\n                });\r\n        });\r\n    }\r\n\r\n    public crud(): Promise<Crud> {\r\n        return new Promise((resolve, reject) => {\r\n            this.databaseInstance().then(database => {\r\n                resolve(new Crud(database, this._mapper, this.enableLog));\r\n            })\r\n                .catch(reject);\r\n        });\r\n    }\r\n\r\n    public sql(sql: string, params: any[] = []): Promise<ResultExecuteSql> {\r\n        return new Promise((resolve, reject) => {\r\n            this.databaseInstance().then(database => {\r\n                const executable = new ExecutableBuilder(this.enableLog);\r\n                executable.execute({\r\n                    query: sql,\r\n                    // tslint:disable-next-line:object-literal-shorthand\r\n                    params: params\r\n                } as QueryCompiled, database)\r\n                    .then((cursor: ResultExecuteSql) => {\r\n                        resolve(cursor);\r\n                    });\r\n            })\r\n                .catch(reject);\r\n        });\r\n    }\r\n\r\n    public query<T>(typeT: new () => T, alias: string = void 0): Promise<Query<T>> {\r\n        return new Promise((resolve, reject) => {\r\n            this.databaseInstance()\r\n                .then(database => {\r\n                    resolve(new Query(typeT, alias, this._mapper.getMapper(typeT), database, this.enableLog));\r\n                }, reject)\r\n                .catch(reject);\r\n        });\r\n    }\r\n\r\n    public ddl(): Promise<Ddl> {\r\n        return new Promise((resolve, reject) => {\r\n            this.databaseInstance().then(database => {\r\n                resolve(new Ddl(database, this._mapper, this.enableLog));\r\n            })\r\n                .catch(reject);\r\n        });\r\n    }\r\n\r\n    protected abstract databaseName(): string;\r\n\r\n    public abstract version(): number;\r\n}\r\n",
    "import { SQLite, SQLiteObject } from \"@ionic-native/sqlite\";\r\nimport { Platform } from \"ionic-angular\";\r\n\r\nexport abstract class DatabaseManager {\r\n\r\n    private _databases: Map<string, Promise<SQLiteObject>> = new Map<string, Promise<SQLiteObject>>();\r\n\r\n    constructor(protected _platform: Platform, private _sqlite: SQLite) {\r\n\r\n    }\r\n\r\n    public cleanDatabaseName(name: string) {\r\n        return name.replace(/([^a-z0-9]+)/gi, \"-\");\r\n    }\r\n\r\n    protected addDatabaseNameExtension(databaseName: string): string {\r\n        return `${databaseName}.db`;\r\n    }\r\n\r\n    public databaseInstance(name: string, version: number): Promise<SQLiteObject> {\r\n        const keyDatabaseName: string = name + version;\r\n        return this._databases.has(keyDatabaseName)\r\n            ? this._databases.get(keyDatabaseName)\r\n            : this._databases.set(keyDatabaseName, this.createDatabase(this.addDatabaseNameExtension(this.cleanDatabaseName(name)), version)).get(keyDatabaseName);\r\n    }\r\n\r\n    public invalidateInstance() {\r\n        this._databases = new Map<string, Promise<SQLiteObject>>();\r\n    }\r\n\r\n    protected abstract migrationVersion(database: SQLiteObject, version: number): Promise<boolean>;\r\n\r\n    private createDatabase(name: string, version: number): Promise<SQLiteObject> {\r\n        return new Promise<SQLiteObject>((resolve, reject) => {\r\n            if (this._platform.is(\"cordova\")) {\r\n                const db = this._sqlite.create({\r\n                    name: name,\r\n                    location: \"default\"\r\n                });\r\n                db.then((database: SQLiteObject) => {\r\n                    this.migrationVersion(database, version)\r\n                        .then(_ => resolve(db))\r\n                        .catch(er => reject(er));\r\n                }).catch(error => {\r\n                    this.catchException(error);\r\n                    reject(error);\r\n                });\r\n            } else {\r\n                resolve(void 0);\r\n            }\r\n        });\r\n    }\r\n\r\n    private catchException(e: any) {\r\n        // tslint:disable-next-line:no-console\r\n        console.error(e);\r\n    }\r\n}\r\n",
    "import { DatabaseSettingsFactoryContract } from \"..\";\r\nimport { Version } from \"./../model/version-model\";\r\nimport { Observer } from \"rxjs/Observer\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { App, Config } from \"ionic-angular\";\r\nimport { Injectable, Injector, Optional } from \"@angular/core\";\r\nimport { SQLiteTransaction } from \"@ionic-native/sqlite\";\r\nimport { Ddl } from \"database-builder\";\r\nimport { DatabaseMigrationContract } from \"./database-migration-contract\";\r\nimport { DatabaseMigrationBase } from \"../utils/database-migration-base\";\r\n\r\n@Injectable()\r\nexport class DatabaseMigration extends DatabaseMigrationBase {\r\n\r\n    constructor(\r\n        private _injector: Injector,\r\n        private _settings: DatabaseSettingsFactoryContract,\r\n        app: App,\r\n        config: Config,\r\n        @Optional() private _databaseMigrationContract: DatabaseMigrationContract\r\n    ) {\r\n        super(\r\n            app, config\r\n        );\r\n    }\r\n\r\n    public databaseReset(transation: SQLiteTransaction): Observable<any> {\r\n\r\n        // tslint:disable-next-line:no-console\r\n        console.info(\"database reset\");\r\n\r\n        const observablesWait: Array<Observable<any>> = [];\r\n\r\n        // const mappers = this._mappersTable;\r\n        const mappers = this._settings.mapper(this._injector);\r\n\r\n        // remove dados offline da versão anterior, pois o formato dos dados foi alterado de uma versão para a outra\r\n        const ddl = new Ddl(transation, mappers, true);\r\n        mappers.forEachMapper((value, key) => {\r\n            if (!value.readOnly) {\r\n                observablesWait.push(Observable.fromPromise(ddl.drop(value.newable).execute()));\r\n                observablesWait.push(Observable.fromPromise(ddl.create(value.newable).execute()));\r\n            }\r\n        });\r\n\r\n        return Observable.forkJoin(observablesWait);\r\n    }\r\n\r\n    protected migrationExecute(transation: SQLiteTransaction, version: Version): Promise<boolean> {\r\n        return new Promise<boolean>((resolve, reject) => {\r\n\r\n            let observablesNested: Array<Observable<any>> = [];\r\n            if (this._databaseMigrationContract) {\r\n                const toObservables = this._databaseMigrationContract.to(\r\n                    version, transation, this._settings.mapper(this._injector)\r\n                );\r\n                if (toObservables && toObservables.length > 0) {\r\n                    observablesNested = observablesNested.concat(toObservables);\r\n                }\r\n            }\r\n\r\n            if (observablesNested.length === 0 && version.oldVersion < 1) {\r\n                observablesNested.push(this.databaseReset(transation));\r\n            }\r\n\r\n            this.callNested(observablesNested, 0).subscribe(result => {\r\n                resolve(result);\r\n            }, error => reject(error));\r\n        });\r\n    }\r\n\r\n    private callNested(observablesNested: Array<Observable<any>>, nextIndex: number): Observable<boolean> {\r\n        return Observable.create((observer: Observer<boolean>) => {\r\n            if (observablesNested.length > nextIndex) {\r\n                observablesNested[nextIndex].subscribe(result => {\r\n                    this.callNested(observablesNested, ++nextIndex).subscribe(_ => {\r\n                        observer.next(true);\r\n                        observer.complete();\r\n                    }, error => {\r\n                        observer.error(error);\r\n                        observer.complete();\r\n                    });\r\n                });\r\n            } else {\r\n                observer.next(true);\r\n                observer.complete();\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n",
    "import { Observer } from \"rxjs/Observer\";\r\nimport { Alert, App, Config } from \"ionic-angular\";\r\nimport { SQLiteObject, SQLiteTransaction } from \"@ionic-native/sqlite\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport * as momentNs from \"moment\";\r\nconst moment = momentNs;\r\n\r\nexport abstract class DatabaseMigrationBase {\r\n\r\n    constructor(\r\n        protected _app: App, protected _config: Config\r\n    ) {\r\n\r\n    }\r\n\r\n    public version(database: SQLiteObject, version: number): Promise<boolean> {\r\n        return new Promise<boolean>((resolve, reject) => {\r\n            this.checkTableVersion(database).then(_ => {\r\n                this.checkVersion(database, version)\r\n                    .subscribe(result => {\r\n                        this.migration(database, result)\r\n                            .then(r => resolve(r))\r\n                            .catch(er => reject(er));\r\n                    }, er => reject(er));\r\n            })\r\n                .catch(er => reject(er));\r\n        });\r\n    }\r\n\r\n    protected errorAlert(error: string) {\r\n        // tslint:disable-next-line:no-console\r\n        console.error(error);\r\n        const alert = new Alert(this._app, {\r\n            title: \"Erro ao salvar dados off-line!\",\r\n            message: error,\r\n            buttons: [\"OK\"]\r\n        }, this._config);\r\n        alert.present();\r\n    }\r\n\r\n    protected abstract migrationExecute(transation: SQLiteTransaction, control: { oldVersion: number, newVersion: number }): Promise<boolean>;\r\n\r\n    private checkTableVersion(database: SQLiteObject): Promise<any> {\r\n        return new Promise<any>((resolve, reject) => {\r\n            const scriptTableVersion = `CREATE TABLE IF NOT EXISTS MigrationVersion(\r\n                    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT\r\n                    , data INTEGER\r\n                    , version TEXT\r\n                    );`;\r\n            database.executeSql(scriptTableVersion, {})\r\n                .then(resolve)\r\n                .catch(reject);\r\n        });\r\n    }\r\n\r\n    private checkVersion(database: SQLiteObject, newVersion: number): Observable<{ oldVersion: number, newVersion: number }> {\r\n        return Observable.create((observer: Observer<any>) => {\r\n            this.getVersion(database).subscribe(oldVersion => {\r\n                if (oldVersion > 0) {\r\n                    if (newVersion > oldVersion) {\r\n                        // tslint:disable-next-line:no-console\r\n                        console.info(`Version old: ${oldVersion}`);\r\n                        database.executeSql(`UPDATE MigrationVersion\r\n                                SET (data, version) = (?, ?);`,\r\n                            [moment().unix(), newVersion])\r\n                            .then()\r\n                            .catch(this.errorAlert);\r\n                    }\r\n                } else {\r\n                    database.executeSql(`INSERT INTO MigrationVersion (data, version) VALUES (?, ?)`,\r\n                        [moment().unix(), newVersion])\r\n                        .then()\r\n                        .catch(this.errorAlert);\r\n                }\r\n                observer.next({\r\n                    oldVersion: oldVersion,\r\n                    newVersion: newVersion\r\n                });\r\n                observer.complete();\r\n            });\r\n        });\r\n    }\r\n\r\n    private getVersion(database: SQLiteObject): Observable<number> {\r\n        return Observable.create((observer: Observer<number>) => {\r\n            database.executeSql(`SELECT * FROM MigrationVersion`, {})\r\n                .then((result) => {\r\n                    let version = 0;\r\n                    if (result.rows.length > 0) {\r\n                        version = Number.parseFloat(result.rows.item(0).version);\r\n                    }\r\n                    observer.next(version);\r\n                    observer.complete();\r\n                })\r\n                .catch(this.errorAlert);\r\n        });\r\n    }\r\n\r\n    private migration(database: SQLiteObject, control: { oldVersion: number, newVersion: number }): Promise<boolean> {\r\n        return new Promise<boolean>((resolve, reject) => {\r\n            database.transaction((transation: SQLiteTransaction) => {\r\n                this.migrationExecute(transation, control)\r\n                    .then(r => resolve(r))\r\n                    .catch(er => reject(er));\r\n            });\r\n        });\r\n    }\r\n}\r\n",
    "import { MappersTableBase } from \"..\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Version } from \"./../model/version-model\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { SQLiteTransaction } from \"@ionic-native/sqlite\";\r\n\r\n@Injectable()\r\nexport abstract class DatabaseMigrationContract {\r\n\r\n    public abstract to(\r\n        version: Version,\r\n        transation: SQLiteTransaction,\r\n        mappers: MappersTableBase\r\n    ): Array<Observable<any>>;\r\n}\r\n",
    "import { Injectable } from \"@angular/core\";\r\nimport { DatabaseHelper } from \"database-builder\";\r\n\r\n@Injectable()\r\nexport class DatabaseHelperService extends DatabaseHelper {\r\n\r\n}\r\n",
    "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n"
  ],
  "names": [
    "MetadataTable",
    "tslib_1.__extends",
    "NgModule",
    "SQLite",
    "Platform",
    "Injector",
    "Injectable",
    "sqlite",
    "Ddl",
    "Query",
    "ExecutableBuilder",
    "Crud",
    "Optional",
    "Config",
    "App",
    "Observable",
    "Alert",
    "DatabaseHelper"
  ],
  "mappings": "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"
}
